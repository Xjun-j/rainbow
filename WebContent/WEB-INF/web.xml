<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	metadata-complete="true" version="3.0">
	<display-name>rainbow</display-name>

	<!-- springmvc 配置 springmvc是只有一个核心的Servlet -->
	<servlet>
		<servlet-name>spring-dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring-dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- spring容器配置 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
		classpath:/applicationContext.xml
		classpath:/applicationContext-security.xml
		classpath:/hibernate_spring.xml
		</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>


	<!-- hibernate对对象的管理是基于session的，如果开启了延迟加载， 对于关联对象的查询可能会在渲染jsp的时候才发生，但是这个时候hibernate的当前session默认已经关闭了， 
		就会抛异常，所以我们经常需要hibernate在渲染jsp页面的时候还开着session，这就需要在web.xml中配置一个拦截所有请求的filter -->
	<filter>
		<filter-name>hibernateFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>hibernateFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- Spring security 配置 -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	 <session-config>
        <session-timeout>1440</session-timeout>
    </session-config>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
<!-- 		<welcome-file>index.htm</welcome-file> -->
		<welcome-file>pages/login.jsp</welcome-file>
<!-- 		<welcome-file>default.html</welcome-file> -->
<!-- 		<welcome-file>default.htm</welcome-file> -->
<!-- 		<welcome-file>default.jsp</welcome-file> -->
	</welcome-file-list>
</web-app>